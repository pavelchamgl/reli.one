# Generated by Django 5.1 on 2025-05-20 17:26

import django.core.validators
import django.db.models.deletion
import mptt.fields
import product.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sellers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('product_description', models.TextField()),
                ('barcode', models.CharField(blank=True, help_text='A standardized barcode (e.g., EAN or UPC) if the product has one.', max_length=50, null=True)),
                ('article', models.CharField(blank=True, help_text='Article code displayed to customers (must be exactly 10 digits).', max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Article must be exactly 10 digits.', regex='^\\d{10}$')])),
                ('rating', models.DecimalField(blank=True, decimal_places=1, default=Decimal('0.0'), max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('total_reviews', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_reason', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['Manager', 'Admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_products', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='sellers.sellerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BaseProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='base_product_images/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.baseproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='product.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.category'),
        ),
        migrations.CreateModel(
            name='LicenseFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('file', models.FileField(upload_to='license_files/', validators=[product.models.validate_file_extension, product.models.validate_file_size])),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='license_files', to='product.baseproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_parameters', to='product.baseproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(editable=False, max_length=9, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('text', models.CharField(blank=True, max_length=150, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='base_product_images/variant/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('weight_grams', models.PositiveIntegerField(default=0, help_text='Вес товара в граммах')),
                ('width_mm', models.PositiveIntegerField(blank=True, help_text='Ширина упаковки в миллиметрах', null=True)),
                ('height_mm', models.PositiveIntegerField(blank=True, help_text='Высота упаковки в миллиметрах', null=True)),
                ('length_mm', models.PositiveIntegerField(blank=True, help_text='Длина упаковки в миллиметрах', null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='product.baseproduct')),
            ],
        ),
    ]
